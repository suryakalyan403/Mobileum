deployment:
  mode:
  ha: false
  productConfig:
    # -- (string) The product config secret name
    secretName:
  license:
    # -- (string) The license file secret name
    secretName:
  replicas: 1
  xdtPort: 40353
  # -- (string) Base directory
  base-dir:
  interactive-setup: false
  waitOnFailure: false
  waitOnFailureTimeout: 60m
  resources:
    requests:
      memory: "1Gi"
      cpu: "100m"
    limits:
      memory: "3Gi"
      cpu: "2000m"
  livenessProbe:
    initialDelaySeconds: 120
    periodSeconds: 60
    timeoutSeconds: 30
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    initialDelaySeconds: 120
    periodSeconds: 60
    timeoutSeconds: 30
    failureThreshold: 5
    successThreshold: 1
  logLevel: info
  auditLogLevel: debug
  lmLogLevel: info
  datamodelLogLevel: info
  datastoreLogLevel: info
  smartTransformLogLevel: info
  hkLogLevel: debug
  wsLogLevel: info
  rootLogLevel: error
  wpkgLogLevel: debug
  runLevel: info
  domain:
  wpkgLegacyMode:
  safeToEvict: true
  upload-target: portal

logPersistence:
  enabled: false
  existingClaim:
  accessModes:
    - ReadWriteOnce
  size: 1G
  storageClass:
  volumeName:

dataPersistence:
  enabled: false
  existingClaim:
  accessModes:
    - ReadWriteOnce
  size: 1G
  storageClass:
  volumeName:

nodeAffinity:

podAffinity:

podAntiAffinity:

cleanupNodeAffinity:

cleanupPodAffinity:

cleanupPodAntiAffinity:

processNodeAffinity:

processPodAffinity:

processPodAntiAffinity:

automountServiceAccountToken: false

registry:
  host: registry
  port: 8080

process:
  resources:
    requests:
      memory: "1Gi"
      cpu: "100m"
    limits:
      memory: "6Gi"
      cpu: "2000m"

service:
  xdtPort: 40353
  type: ClusterIP
  ipFamilyPolicy: "SingleStack"
  ipFamilies: [ "IPv4" ]

podSecurityContext:
  enabled: false

containerSecurityContext:
  enabled: true
  privileged: false
  allowPrivilegeEscalation: false

customPodLabels: {}

customJobLabels: {}

customPodAnnotations: {}

customJobAnnotations: {}

volumePermissions:
  securityContext:
    runAsUser: 0
  image:
    # -- (string) Registry to use or nil to use the main one
    registry:
    repository: aip/base
    tag: 0.5.2
    pullPolicy: IfNotPresent
  resources:
    requests:
      memory: "64Mi"
      cpu: "100m"
    limits:
      memory: "128Mi"
      cpu: "200m"


image:
  registry:
  repository: aip/rafm-8.2.10
  tag: 4.8.1
  pullPolicy: IfNotPresent
  pullSecrets: []

processImage:
  # -- (string) Registry to use or nil to use the main one
  registry:
  # -- (string) Repository to use or nil to use the main one
  repository:
  # -- (string) Tag to use or nil to use the main one
  tag:
  # -- (string) Pull policy to use or nil to use the main one
  pullPolicy:

storage:
  type: local
  s3:
    secretName:
    endpoint: http://s3.amazonaws.com
    region: us-east-1
    credentials-type: default
    access-key-id:
    secret-access-key:
    session-token:
    credentials-file:
      secretName:
      configmapName:
    signatureVersion: s3v4
  gs:
    service-account:
      secretName:
      configmapName:
  hdfs:
    user:
    secretName:
    configmapName:
    authentication:
      type:
      kerberos:
        principal:
        keytab:
          secretName:
          configmapName:
        conf:
          secretName:
          configmapName:
  azure:
    connectionString:
    accountName:
    accountKey:
    container:

skipSetup: false

cacerts:
  configmap: ""
  secret: ""
  keystoreAlias: ""
  keystorePassword: ""

caTrust:
  enabled: false
  secret:
  configmap:

vault:
  type: "NONE"
  url: ""
  role: ""

autoscaling:
  enabled: false
  kind: StatefulSet
  minReplicas: 1
  maxReplicas: 3
  metrics:
    cpuPercent: 90
    memoryPercent: 95
    customEnabled: false
    custom: {}
  behaviors:
    enabled: false
    scaleDown:
      enabled: false
      stabilizationWindow: 300
      selectPolicy: Min
      percent:
        value: 0
        period: 60
      pods:
        enabled: false
        value: 0
        period: 60
    scaleUp:
      enabled: false
      stabilizationWindow: 300
      selectPolicy: Min
      percent:
        value: 0
        period: 60
      pods:
        enabled: false
        value: 0
        period: 60

hostAliases:

pvcInternalManagement: true

podDisruptionBudget: true
