apiVersion: "v1"
kind: "ConfigMap"
metadata:
  name: {{ include "aip.names.fullname" . }}-configmap
  labels: {{- include "aip.labels.standard" . | nindent 4 }}
  annotations: {{- include "aip.annotations.standard" . | nindent 4 }}
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-10"
data:
  DEPLOYMENT_NAME: {{ .Release.Name }}
  DEPLOYMENT_BASE_DIR: '{{ index .Values.deployment "base-dir" }}'
  DEPLOYMENT_UPLOAD_TARGET: '{{ index .Values.deployment "upload-target" }}'
  INTERACTIVE_MODE_FLAG: '{{ index .Values.deployment "interactive-setup" | default "false" }}'
  STORAGE_TYPE: "{{.Values.storage.type}}"
  {{- if eq .Values.storage.type "s3" }}
  AWS_ENDPOINT: {{ .Values.storage.s3.endpoint }}
  {{- if .Values.storage.s3.region }}
  AWS_DEFAULT_REGION: {{ .Values.storage.s3.region }}
  AWS_SIGNATURE_VERSION: {{ .Values.storage.s3.signatureVersion | default "s3v4" | quote }}
  {{- end }}
  {{- else if eq .Values.storage.type "hdfs" }}
  HADOOP_USER_NAME: {{ .Values.storage.hdfs.user | default "hadoop" | quote }}
  HADOOP_CONF_DIR: "/etc/hadoop/conf"
  {{- if eq .Values.storage.hdfs.authentication.type "kerberos"}}
  STORAGE_HDFS_AUTHENTICATION: {{ .Values.storage.hdfs.authentication.type }}
  STORAGE_HDFS_PRINCIPAL: {{ .Values.storage.hdfs.authentication.kerberos.principal }}
  STORAGE_HDFS_KEYTABFILELOCATION: "/etc/hadoop/kerberos/hdfs.keytab"
  {{- end }}
  {{- else if eq .Values.storage.type "azure" }}
  AZURE_CONTAINER: {{ .Values.storage.azure.container }}
  {{- if .Values.storage.azure.connectionString }}
  AZURE_CONNECTION_STRING: {{ .Values.storage.azure.connectionString | quote }}
  {{- else }}
  {{- if .Values.storage.azure.accountName }}
  AZURE_ACCOUNT_NAME: {{ .Values.storage.azure.accountName | quote }}
  {{- end }}
  {{- if .Values.storage.azure.accountKey }}
  AZURE_ACCOUNT_KEY: {{ .Values.storage.azure.accountKey | quote }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- if eq (default false .Values.deployment.waitOnFailure) true }}
  WAIT_ON_FAILURE_TIMEOUT: {{ .Values.deployment.waitOnFailureTimeout }}
  {{- end }}
  SERVER_LOG_LEVEL: {{ .Values.deployment.logLevel | default "info" | quote }}
  AUDIT_LOG_LEVEL: {{ .Values.deployment.auditLogLevel | default "debug" | quote }}
  LM_LOG_LEVEL: {{ .Values.deployment.lmLogLevel | default "info" | quote }}
  DATAMODEL_LOG_LEVEL: {{ .Values.deployment.datamodelLogLevel | default "info" | quote }}
  DATASTORE_LOG_LEVEL: {{ .Values.deployment.datastoreLogLevel | default "info" | quote }}
  SMARTTRANSFORM_LOG_LEVEL: {{ .Values.deployment.smartTransformLogLevel | default "info" | quote }}
  HK_LOG_LEVEL: {{ .Values.deployment.hkLogLevel | default "debug" | quote }}
  WS_LOG_LEVEL: {{ .Values.deployment.wsLogLevel | default "info" | quote }}
  SERVER_ROOT_LOG_LEVEL: {{ .Values.deployment.rootLogLevel | default "error" | quote }}
  WPKG_LOG_LEVEL: {{ .Values.deployment.wpkgLogLevel | default "debug" | quote }}
  LOG_PERSISTENCE: {{ .Values.logPersistence.enabled | default "false" | quote }}
  WPKG_CLOUD_MODE: "true"
  LIVENESS_PORT: {{ .Values.deployment.xdtPort | quote }}
  AIP_REGISTRY_ENDPOINT: {{ .Values.registry.host }}:{{ .Values.registry.port }}
  {{- if .Values.deployment.runLevel }}
  RUN_LEVEL: {{ .Values.deployment.runLevel }}
  {{- end }}
  {{- if .Values.deployment.domain }}
  DOMAIN: {{ .Values.deployment.domain }}
  {{- end }}
  {{- if eq .Values.vault.type "HASHI_CORP" }}
  VAULT_TYPE: {{ .Values.vault.type }}
  VAULT_ADDR: {{ .Values.vault.url }}
  VAULT_ROLE: {{ .Values.vault.role }}
  {{- end }}
  WPKG_LEGACY_MODE: {{ .Values.deployment.wpkgLegacyMode | default "false" | quote }}
